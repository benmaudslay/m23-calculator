{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["keys","value","styling","App","state","total","handleKey","val","setState","newTotal","evaluate","join","error","newArr","shift","prevState","className","this","map","item","func","number","href","React","Component","Key","props","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAIMA,EAAO,CACX,CAAEC,MAAO,KAAMC,QAAS,cACxB,CAAED,MAAO,IAAKC,QAAS,YACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,YACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,YACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,YACvB,CAAED,MAAO,IAAKC,QAAS,aACvB,CAAED,MAAO,IAAKC,QAAS,OACvB,CAAED,MAAO,IAAKC,QAAS,aAGnBC,E,4MACJC,MAAQ,CACNC,MAAO,CAAC,I,EAGVC,UAAY,SAACC,GACX,GAAY,OAARA,EACF,EAAKC,SAAS,CAAEH,MAAO,CAAC,UACnB,GAAY,MAARE,EACT,IACE,IAAIE,EAAWC,YAAS,EAAKN,MAAMC,MAAMM,KAAK,KAC9C,EAAKH,SAAS,CAAEH,MAAO,CAACI,KACxB,MAAOG,GACP,EAAKJ,SAAS,CAAEH,MAAO,CAAC,aAErB,CACL,IAAIQ,EAAM,sBAAO,EAAKT,MAAMC,OAAlB,CAAyBE,KACjB,IAAdM,EAAO,IAEc,QAAdA,EAAO,KADhBA,EAAOC,QAIT,EAAKN,UAAS,SAACO,GAAD,MAAgB,CAAEV,MAAOQ,Q,4CAI3C,WAAU,IAAD,OACP,OACE,sBAAKG,UAAU,YAAf,UACE,6BACE,8CAEF,sBAAKA,UAAU,UAAf,UACE,oBAAIA,UAAU,SAAd,SAAwBC,KAAKb,MAAMC,QACnC,qBAAKW,UAAU,UAAf,SACGhB,EAAKkB,KAAI,SAACC,GACT,OACE,cAAC,EAAD,CACEjB,QAASiB,EAAKjB,QACdkB,KAAM,EAAKd,UACXe,OAAQF,EAAKlB,gBAMvB,yCACU,mBAAGqB,KAAK,iCAAR,2B,GA/CAC,IAAMC,WAsDlBC,EAAM,SAACC,GAAD,OACV,wBACEV,UAAS,cAASU,EAAMxB,SACxByB,QAAS,kBAAMD,EAAMN,KAAKM,EAAML,SAFlC,SAIGK,EAAML,UAIIlB,IC3EAyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bee18e6b.chunk.js","sourcesContent":["import React from \"react\";\nimport { evaluate } from \"mathjs\";\nimport \"./App.css\";\n\nconst keys = [\n  { value: \"AC\", styling: \"clear wide\" },\n  { value: \"/\", styling: \"operator\" },\n  { value: \"7\", styling: \"num\" },\n  { value: \"8\", styling: \"num\" },\n  { value: \"9\", styling: \"num\" },\n  { value: \"*\", styling: \"operator\" },\n  { value: \"4\", styling: \"num\" },\n  { value: \"5\", styling: \"num\" },\n  { value: \"6\", styling: \"num\" },\n  { value: \"+\", styling: \"operator\" },\n  { value: \"1\", styling: \"num\" },\n  { value: \"2\", styling: \"num\" },\n  { value: \"3\", styling: \"num\" },\n  { value: \"-\", styling: \"operator\" },\n  { value: \"0\", styling: \"zero wide\" },\n  { value: \".\", styling: \"num\" },\n  { value: \"=\", styling: \"operator\" },\n];\n\nclass App extends React.Component {\n  state = {\n    total: [0],\n  };\n\n  handleKey = (val) => {\n    if (val === \"AC\") {\n      this.setState({ total: [0] });\n    } else if (val === \"=\") {\n      try {\n        let newTotal = evaluate(this.state.total.join(\"\"));\n        this.setState({ total: [newTotal] });\n      } catch (error) {\n        this.setState({ total: [\"Err\"] });\n      }\n    } else {\n      let newArr = [...this.state.total, val];\n      if (newArr[0] === 0) {\n        newArr.shift();\n      } else if (newArr[0] === \"Err\") {\n        newArr.shift();\n      }\n      this.setState((prevState) => ({ total: newArr }));\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h3>\n          <u> Calculator</u>\n        </h3>\n        <div className=\"wrapper\">\n          <h1 className=\"screen\">{this.state.total}</h1>\n          <div className=\"buttons\">\n            {keys.map((item) => {\n              return (\n                <Key\n                  styling={item.styling}\n                  func={this.handleKey}\n                  number={item.value}\n                />\n              );\n            })}\n          </div>\n        </div>\n        <p>\n          Made by <a href=\"https://github.com/benmaudslay\">Ben</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nconst Key = (props) => (\n  <button\n    className={`btn ${props.styling}`}\n    onClick={() => props.func(props.number)}\n  >\n    {props.number}\n  </button>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}